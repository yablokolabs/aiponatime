name: Deploy to GitHub Pages

# Grant OIDC and read access so deploy-pages can fetch the id-token
permissions:
  id-token: write # allow OIDC token requests
  pages: write
  contents: read # allow checkout

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  NEXT_TELEMETRY_DISABLED: 1

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: package

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"

      - name: Install dependencies
        run: npm ci

      - name: Update image references
        run: |
          # Create a script to update image references
          cat > update-refs.js << 'EOL'
          const fs = require('fs');
          const path = require('path');

          // Function to process files recursively
          function processDirectory(directory) {
            const files = fs.readdirSync(directory);

            files.forEach(file => {
              const fullPath = path.join(directory, file);
              const stat = fs.statSync(fullPath);

              if (stat.isDirectory()) {
                processDirectory(fullPath);
              } else if (file.match(/\.(js|jsx|tsx|ts)$/)) {
                let content = fs.readFileSync(fullPath, 'utf8');
                const originalContent = content;

                // Replace image references to use WebP when available
                content = content.replace(
                  /(['"])(.*?\.(?:jpg|jpeg|png))(?!\.webp)(['"])/g,
                  (match, quote1, imgPath, quote2) => {
                    const webpPath = imgPath.replace(/\.(jpg|jpeg|png)$/i, '.webp');
                    const fullImgPath = path.join(process.cwd(), 'public', imgPath);
                    const fullWebpPath = path.join(process.cwd(), 'public', webpPath);

                    // Check if WebP version exists
                    if (fs.existsSync(fullWebpPath)) {
                      console.log(`‚úÖ Replaced ${imgPath} with ${webpPath}`);
                      return `${quote1}${webpPath}${quote2}`;
                    }
                    return match;
                  }
                );

                // Write back if changed
                if (content !== originalContent) {
                  fs.writeFileSync(fullPath, content, 'utf8');
                  console.log(`üìù Updated ${fullPath}`);
                }
              }
            });
          }

          // Start processing from the src directory
          processDirectory(path.join(process.cwd(), 'src'));
          EOL

          # Run the script
          node update-refs.js

      - name: Build static site
        run: npm run build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "package/out"

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
